import streamlit as st
import pandas as pd

st.title("HR Insurance Segmentation App")

# –ó–∞–≥—Ä—É–∂–∞–µ–º Excel
uploaded_file = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ Excel —Å –¥–∞–Ω–Ω—ã–º–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤", type=["xlsx"])

if uploaded_file is not None:
    df = pd.read_excel(uploaded_file)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –Ω—É–∂–Ω—ã–µ –∫–æ–ª–æ–Ω–∫–∏
    required_cols = ["age_score", "dependents_score", "marital_score", "health_score", "seniority_score", "Total_Score"]
    if all(col in df.columns for col in required_cols):

        # –ü—Ä–æ—Å—Ç–∞—è —Å–µ–≥–º–µ–Ω—Ç–∞—Ü–∏—è –ø–æ –≤–æ–∑—Ä–∞—Å—Ç—É –∏ Total_Score
        def segment(row):
            if row["age_score"] <= 2 and row["dependents_score"] == 0 and row["health_score"] <= 2:
                return "–ú–æ–ª–æ–¥—ã–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏"
            elif row["age_score"] <= 3 and row["dependents_score"] >= 1:
                return "–°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ —Å—Ä–µ–¥–Ω–µ–≥–æ –≤–æ–∑—Ä–∞—Å—Ç–∞ —Å –¥–µ—Ç—å–º–∏"
            else:
                return "–û–ø—ã—Ç–Ω—ã–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏"

        df["–ì—Ä—É–ø–ø–∞"] = df.apply(segment, axis=1)

        # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        recommendations = {
            "–ú–æ–ª–æ–¥—ã–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏": {
                "–¢–∞—Ä–∏—Ñ": "Standard (Low)",
                "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ": [
                    "–†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è —Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∏—è",
                    "–û—Ñ—Ç–∞–ª—å–º–æ–ª–æ–≥–∏—è (–ª–∏–Ω–∑—ã/–æ–ø–µ—Ä–∞—Ü–∏–∏ –Ω–∞ –∑—Ä–µ–Ω–∏–µ)",
                    "–ü—Ä–æ–≥—Ä–∞–º–º–∞ '–ó–û–ñ' (—Ñ–∏—Ç–Ω–µ—Å, —Å–ø–æ—Ä—Ç, –Ω—É—Ç—Ä–∏—Ü–∏–æ–ª–æ–≥)",
                    "–¢–µ–ª–µ–º–µ–¥–∏—Ü–∏–Ω–∞ 24/7"
                ]
            },
            "–°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ —Å—Ä–µ–¥–Ω–µ–≥–æ –≤–æ–∑—Ä–∞—Å—Ç–∞ —Å –¥–µ—Ç—å–º–∏": {
                "–¢–∞—Ä–∏—Ñ": "Medium",
                "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ": [
                    "–°–µ–º–µ–π–Ω–æ–µ —Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ (—Å—É–ø—Ä—É–≥–∏, –¥–µ—Ç–∏)",
                    "–ü–µ–¥–∏–∞—Ç—Ä–∏—è –ø—Ä–µ–º–∏—É–º (–≤—ã–µ–∑–¥ –≤—Ä–∞—á–∞ –Ω–∞ –¥–æ–º)",
                    "–í–∞–∫—Ü–∏–Ω–∞—Ü–∏—è –∏ –ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–∞",
                    "–°—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–π"
                ]
            },
            "–û–ø—ã—Ç–Ω—ã–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏": {
                "–¢–∞—Ä–∏—Ñ": "Premium (High)",
                "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ": [
                    "–°—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ –æ—Ç –°–°–ó –∏ –æ–Ω–∫–æ–ª–æ–≥–∏–∏",
                    "–ï–∂–µ–≥–æ–¥–Ω—ã–µ —á–µ–∫-–∞–ø—ã",
                    "–†–µ–∞–±–∏–ª–∏—Ç–∞—Ü–∏—è –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã",
                    "–°–∞–Ω–∞—Ç–æ—Ä–Ω–æ-–∫—É—Ä–æ—Ä—Ç–Ω–æ–µ –ª–µ—á–µ–Ω–∏–µ",
                    "–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –ø–æ–ª–∏—Å –¥–ª—è —Å–µ–º—å–∏"
                ]
            }
        }

        st.subheader("üìä –°–µ–≥–º–µ–Ω—Ç–∞—Ü–∏—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤")
        st.write(df.groupby("–ì—Ä—É–ø–ø–∞").size())

        st.subheader("üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –≥—Ä—É–ø–ø–∞–º")
        for group, rec in recommendations.items():
            st.markdown(f"### üë• {group}")
            st.write(f"**–¢–∞—Ä–∏—Ñ:** {rec['–¢–∞—Ä–∏—Ñ']}")
            st.write("**–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏:**")
            for option in rec["–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ"]:
                st.markdown(f"- {option}")
            st.markdown("---")

    else:
        st.error("–í Excel –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –∫–æ–ª–æ–Ω–æ–∫. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ñ–∞–π–ª–∞.")
